package com.example.user_service.mapper;

import java.time.format.DateTimeFormatter;

import org.springframework.stereotype.Component;

import com.example.user_service.dto.AdminDTO;
import com.example.user_service.dto.CreateAdminDTO;
import com.example.user_service.entity.Admin;

@Component
public class AdminMapper {
    
    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern("dd/MM/yyyy");

    public AdminDTO toDTO(Admin admin) {
        if (admin == null) {
            return null;
        }

        AdminDTO dto = new AdminDTO();
        dto.setId(admin.getId());
        dto.setEmail(admin.getEmail());
        dto.setLastLoginDate(admin.getLastLoginDate() != null ? admin.getLastLoginDate().format(DATE_FORMATTER) : null);

        return dto;
    }

    public Admin toEntity(CreateAdminDTO dto) {
        if (dto == null) {
            return null;
        }

        Admin admin = new Admin();
        admin.setEmail(dto.getEmail());
        admin.setPassword(dto.getPassword());
        // Don't set the ID as it's generated by the database
        // Set lastLoginDate to null initially as this is a new admin
        admin.setLastLoginDate(null);

        return admin;
    }

    public void updateEntity(Admin admin, CreateAdminDTO dto) {
        if (dto == null || admin == null) {
            return;
        }

        if (dto.getEmail() != null) {
            admin.setEmail(dto.getEmail());
        }
        if (dto.getPassword() != null) {
            admin.setPassword(dto.getPassword());
        }
        // Don't update lastLoginDate as it should be updated separately when admin logs in
    }
}
