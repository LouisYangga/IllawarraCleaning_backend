spring.application.name=booking-service

# Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://ep-soft-mud-a7d3w3z7-pooler.ap-southeast-2.aws.neon.tech/user-service?sslmode=require}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:neondb_owner}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:your-password-not-set}
spring.datasource.driver-class-name=org.postgresql.Driver

# RabbitMQ Configuration
spring.rabbitmq.host=${SPRING_RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${SPRING_RABBITMQ_PORT:5672}
spring.rabbitmq.username=${SPRING_RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${SPRING_RABBITMQ_PASSWORD:guest}
rabbitmq.queue.user.name=user-creation-queue
rabbitmq.exchange.name=user-exchange
rabbitmq.routing.key=user.creation

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false

# Server Configuration
server.port=${SERVER_PORT:8082}

# Logging configuration
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
